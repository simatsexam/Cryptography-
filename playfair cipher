#include <stdio.h>
#include <string.h>
#include <ctype.h>

char m[5][5], k[25], p[100];

int pos(char c, int *r, int *c2) {
    if (c == 'j') c = 'i';
    for (int i = 0; i < 25; i++)
        if (k[i] == c) { *r = i / 5; *c2 = i % 5; return 1; }
    return 0;
}

int main() {
    char key[100], text[100]; int d[26] = {0}, len = 0;
    printf("Key: "); gets(key);
    printf("Plaintext: "); gets(text);

    // Create key string k[]
    for (int i = 0; key[i]; i++) {
        char c = tolower(key[i] == 'j' ? 'i' : key[i]);
        if (isalpha(c) && !d[c - 'a']) k[len++] = c, d[c - 'a'] = 1;
    }
    for (int i = 0; i < 26; i++)
        if (i + 'a' != 'j' && !d[i]) k[len++] = i + 'a';
    
    // Clean plaintext
    int n = 0;
    for (int i = 0; text[i]; i++)
        if (isalpha(text[i])) p[n++] = tolower(text[i] == 'j' ? 'i' : text[i]);
    if (n % 2) p[n++] = 'x'; p[n] = '\0';

    printf("Encrypted: ");
    for (int i = 0; i < n; i += 2) {
        char a = p[i], b = p[i+1];
        int r1, c1, r2, c2;
        if (a == b) b = 'x';
        pos(a, &r1, &c1); pos(b, &r2, &c2);
        if (r1 == r2)
            printf("%c%c", k[r1*5 + (c1+1)%5], k[r2*5 + (c2+1)%5]);
        else if (c1 == c2)
            printf("%c%c", k[((r1+1)%5)*5 + c1], k[((r2+1)%5)*5 + c2]);
        else
            printf("%c%c", k[r1*5 + c2], k[r2*5 + c1]);
    }
}
